buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE"
    }
}

plugins {
    id "java"
    id "com.github.samueltbrown.cucumber" version "0.9"
}

apply plugin: 'idea'

apply plugin: 'war'
war {
    baseName = 'modern'
    version = 'HEAD'
}

apply plugin: 'spring-boot'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
}

dependencies {
    compile (
            "org.springframework.boot:spring-boot-starter-data-jpa:1.4.3.RELEASE",
            "org.springframework.boot:spring-boot-starter-mustache:1.4.3.RELEASE",
            "org.springframework.boot:spring-boot-starter-security:1.4.3.RELEASE",
            "org.springframework.boot:spring-boot-starter-web:1.4.3.RELEASE",
            "com.github.mjeanroy:springmvc-mustache:0.5.3",
            'org.glassfish.jersey.core:jersey-client:2.25',
            "mysql:mysql-connector-java:6.0.5",
            files("libs/moss-common-2.1.0.0.jar"),
            "org.projectlombok:lombok:1.16.12",
            "org.webjars:bootstrap:3.3.7-1",
            "org.webjars:jquery:3.1.1",
            "org.hibernate:hibernate-validator:5.3.4.Final",
            "commons-beanutils:commons-beanutils:1.9.3",
            "org.springframework.boot:spring-boot-devtools:1.4.2.RELEASE"
    )
    testCompile (
            "org.springframework.boot:spring-boot-starter-test:1.4.2.RELEASE",
            "junit:junit:4.12",
            "org.mockito:mockito-all:1.10.19",
            "info.cukes:cucumber-java:1.2.5",
            "info.cukes:cucumber-spring:1.2.5",
            "org.seleniumhq.selenium:selenium-java:3.0.1",
            "org.assertj:assertj-core:3.6.1",
            "com.nitorcreations:junit-runners:1.3",
            gradleTestKit()
    )

    cucumberRuntime "info.cukes:cucumber-java:1.2.5"
}

cucumber {
    if(project.hasProperty("tag")){
        tags = ["@"+"$tag"]
    }
    jvmOptions {
        environment 'SPRING_PROFILES_ACTIVE', 'test'
        if(project.hasProperty('port')) {
            environment 'SERVER_PORT', '$port'
        }
        def jacocoAgent = zipTree(configurations.jacocoAgent.singleFile).filter {it.name == "jacocoagent.jar"}.singleFile
        jvmArgs = ["-javaagent:$jacocoAgent=destfile=$buildDir/jacoco/cucumber.exec,append=false"]
    }
}

bootRun {
    environment 'SPRING_PROFILES_ACTIVE', 'dev'
    if(project.hasProperty('port')) {
        environment 'SERVER_PORT', '$port'
    }
}

test {
    environment 'SPRING_PROFILES_ACTIVE', 'test'
}

task copyDependencyLibraries(type: Copy){
    into "$buildDir/output/libs"
    from configurations.compile
}

classes.dependsOn(copyDependencyLibraries)

task copyTestDependencyLibraries(type: Copy){
    into "$buildDir/output/test-libs"
    from configurations.testCompile
}

testClasses.dependsOn(copyTestDependencyLibraries)

task mergeUnitTestResults << {
    def testResultsDir = file("${buildDir}/test-results")
    copy {
        from testResultsDir
        into testResultsDir
        include '**/*$*.xml'
        rename { String fileName ->
            fileName.replace('$Add', '')
        }
    }
}

